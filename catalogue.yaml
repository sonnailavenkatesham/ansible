- name: install catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: install NPM
    ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

  - name: install nodejs
    ansible.builtin.yum:
      name: nodejs
      state: installed
  
  - name: check user roboshop exist or not
    ansible.builtin.command: id roboshop
    register: output
    ignore_errors: yes

  - when: output.rc != 0
    name: add user name called rooboshop
    ansible.builtin.user:
      name: roboshop

  - name: check /app directory is exists ir not
    ansible.builtin.stat:
      path: /app
    register: directory
    ignore_errors: yes

  - name: print the output of stat
    ansible.builtin.debug:
      msg: "output: {{directory}}"
  
  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory
  
  - name: install catalogue artifact
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp
  
  - name: Unarchive a file that is already on the remote machine i.e zipfile
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: install npm dependencies
    ansible.builtin.command: npm install
    remote_src: yes

  - name: copy the catalogue conf
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: Reload service httpd, in all cases
    ansible.builtin.systemd:
      name: catalogue
      state: reloaded

  - name: Restart catalogue
    ansible.builtin.service:
      name: catalogue
      enabled: true
      state: started
  
  - name: install mongodb-org-shell
    ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

  - name: host mongodb
    ansible.builtin.command: mongo --host mongodb.venkateshamsonnalia143.online < /app/schema/catalogue.js

    
    